(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{216:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return s})),n.d(r,"metadata",(function(){return i})),n.d(r,"rightToc",(function(){return p})),n.d(r,"default",(function(){return l}));var t=n(2),a=n(6),o=(n(0),n(387)),s={title:"Expression/expression"},i={id:"version-0.6.0/api/Expression/expression",isDocsHomePage:!1,title:"Expression/expression",description:"expression",source:"@site/versioned_docs/version-0.6.0/api/Expression/expression.md",permalink:"/docs/0.6.0/api/Expression/expression",editUrl:"https://github.com/parsica-php/parsica/tree/main/versioned_docs/version-0.6.0/api/Expression/expression.md",version:"0.6.0",sidebar:"version-0.6.0/docs",previous:{title:"Installation & Requirements",permalink:"/docs/0.6.0/installation"},next:{title:"JSON/JSON",permalink:"/docs/0.6.0/api/JSON/JSON"},latestVersionMainDocPermalink:"/docs"},p=[{value:"expression",id:"expression",children:[]},{value:"binaryOperator",id:"binaryoperator",children:[]},{value:"unaryOperator",id:"unaryoperator",children:[]},{value:"leftAssoc",id:"leftassoc",children:[]},{value:"rightAssoc",id:"rightassoc",children:[]},{value:"nonAssoc",id:"nonassoc",children:[]},{value:"prefix",id:"prefix",children:[]},{value:"postfix",id:"postfix",children:[]}],c={rightToc:p};function l(e){var r=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(t.a)({},c,n,{components:r,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"expression"},"expression"),Object(o.b)("p",null,"Build an expression parser from a term parser and an expression table."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function expression(Parser $term, array $expressionTable) : Parser\n")),Object(o.b)("h3",{id:"binaryoperator"},"binaryOperator"),Object(o.b)("p",null,"A binary operator in an expression. The operands of the expression will be passed into $transform to produce the\noutput of the expression parser."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),'function binaryOperator(Parser $symbol, callable $transform, string $label = "") : BinaryOperator\n')),Object(o.b)("h3",{id:"unaryoperator"},"unaryOperator"),Object(o.b)("p",null,"A unary operator in an expression. The operands of the expression will be passed into $transform to produce the\noutput of the expression parser."),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),'function unaryOperator(Parser $symbol, callable $transform, string $label = "") : UnaryOperator\n')),Object(o.b)("h3",{id:"leftassoc"},"leftAssoc"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function leftAssoc(BinaryOperator ...$operators) : LeftAssoc\n")),Object(o.b)("h3",{id:"rightassoc"},"rightAssoc"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function rightAssoc(BinaryOperator ...$operators) : RightAssoc\n")),Object(o.b)("h3",{id:"nonassoc"},"nonAssoc"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function nonAssoc(BinaryOperator $operator) : NonAssoc\n")),Object(o.b)("h3",{id:"prefix"},"prefix"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function prefix(UnaryOperator ...$operators) : Prefix\n")),Object(o.b)("h3",{id:"postfix"},"postfix"),Object(o.b)("pre",null,Object(o.b)("code",Object(t.a)({parentName:"pre"},{className:"language-php"}),"function postfix(UnaryOperator ...$operators) : Postfix\n")))}l.isMDXComponent=!0},387:function(e,r,n){"use strict";n.d(r,"a",(function(){return u})),n.d(r,"b",(function(){return d}));var t=n(0),a=n.n(t);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function s(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?s(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function p(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),l=function(e){var r=a.a.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=l(e.components);return a.a.createElement(c.Provider,{value:r},e.children)},b={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},f=a.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),f=t,d=u["".concat(s,".").concat(f)]||u[f]||b[f]||o;return n?a.a.createElement(d,i(i({ref:r},c),{},{components:n})):a.a.createElement(d,i({ref:r},c))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var o=n.length,s=new Array(o);s[0]=f;var i={};for(var p in r)hasOwnProperty.call(r,p)&&(i[p]=r[p]);i.originalType=e,i.mdxType="string"==typeof e?e:t,s[1]=i;for(var c=2;c<o;c++)s[c]=n[c];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);